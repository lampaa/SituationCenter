/*
 * File: app/controller/AppController.js
 *
 * This file was generated by Sencha Architect version 4.2.6.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 7.0.x Modern library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 7.0.x Modern. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('Cameras.controller.AppController', {
    extend: 'Ext.app.Controller',

    refs: {
        camgrid: 'grid#camgrid',
        eventslist: 'list#eventslist',
        map: 'panel#map'
    },

    control: {
        "checkcolumn#checkcolumn": {
            checkchange: 'onCheckcolumnCheckChange'
        },
        "list#eventslist": {
            childtap: 'onEventslistChildtap'
        },
        "grid#grid": {
            cameraRecognition: 'onGridCameraRecognition'
        }
    },

    onCheckcolumnCheckChange: function(checkcell, rowIndex, checked, record, e, eOpts) {
        if(checked) {
            this.getMap().addCamera(record);
        }
        else {
            this.getMap().removeCamera(record);
        }

        var data = [];

        record.store.each(function(rec) {
            let checked = rec.get("checked");

            if(checked !== undefined && checked) {
                data.push(rec.get("id"));
            }
        });

        this.getEventslist().getStore().source.load({
            params: {
                camera: data
            }
        });
    },

    onEventslistChildtap: function(list, location, eOpts) {
        let model = Ext.create('Cameras.model.CamerasModel', location.record.get("camera"));

        this.getMap().fitCamera(model);
    },

    onGridCameraRecognition: function(view, eventModel) {
        this.getEventslist().getStore().source.insert(0, eventModel);
    }

});